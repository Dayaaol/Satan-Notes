Persistence:
===========
Basics:
	Peristence is all about maintaining access:
		A. Stable Connection:
			Shell dont get dropped
		B. Persistent Connection:
			Shell is persistent through reboots
Windows Persistence:(3 Ways)
	A. Password Attack:
		Basics:
			These attacks work using a service. For example, hashes can be relayed over smb or rdp, etc.
		Attack Types:(2)
			1. Password Hash:
				A. PTH
				B. Crack hash to get plain password
			2. Plain Password:
				PTP
		Services:
			Basics:
				Scenarios:(3)
					A. Services are already active:
						we need credentials to connect to them
					B. No services are active:
						We need to activate them
					C. New users:
						If we created new users, then we need to add them for each service.
			Enumerating Open Services:
				Shift this section to win privesc
				Using net.exe:
					cmd> net start
					ps> net start
			Service-Based Exploitation:
				RDP:
					Enabling RDP:
						Manual:
						cmd:
							net localgroup "Remote Desktop Users" User_name /add
	B. Creating User:
		Creating a new user:
			net user user_name pass /add
		Making user an admin:
			net localgroup "Administrators" user_name /add
	C. Backdoor:
		Basics:
		Types:
			A. Attacker connects to backdoor:
				Advantages:
				Disadvantages:
					Firewall
					Victim has no static ip
			B. Backdoor connects to attacker:(aka Connect-Back Backdoors)
				Basics:
					Advantages:
						Issues such as victim's dynamic ip or firewall/ips in middle of victim & attacker are bypassed.
					Disadvantages:
						Victim will always try to connect back to same IP and port, unless attacker uses a "DNS service." Connecting to same IP can lead to more chances of being found by AV or blue team.
						Note:
							Read "Using DNS Service" Section to know more.
					Ideal Backdoor:
						1. Connects back in case connection drops
						2. Connects automatically after a reboot
						3. Evades AV
				Backdooring:
					Automated:
						MSF:
							post/windows/manage/persistence_exe:
								Basics:
									This Module will upload an executable to a remote host and make it Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER will start on user login, SYSTEM will start on system boot but requires privs. SERVICE will create a new service which will start the payload and requires privs.
								Usage:
									From Meterpreter:
										run post/windows/manage/persistence_exe
									From MSF:
										use post/windows/manage/persistence_exe
										set session <session_id>
										exploit
					Manual:
						Step-1: Creating Backdoor:
							Read Reverse Shell Section of Shell Sheet.
						Step-2: Uploading Backdoor:
							Read Windows Privesc Sheet
						Step-3: Setting up the Backdoor:						
							As a Startup Service:
								CMD:
									sc \\target_ip create svc_name binpath="cmd.exe /k malc.exe"
									sc \\target_ip start svc_name
								PS:
								Note:
									Choose a name for service which dont stand out example: googleupdate
							As a Scheduled Tasks:
								CMD:
									schtasks /create /tn task_name /sc <frequency> /u user_name /p password /tr <command>
								PS:
							As Registery:
								CMD:
									reg setval -k reg_key_path -d key_value -v key_name
								PS:
				Connecting to backdoor:
					Just set up a listener and wait for the backdoor to connect back.
		Additional Modifications:
			Using DNS Service:
				Basics:
					By using a DNS service, attacker increases chances of not being detected as the network structure looks like this:
						Attacker -> DNS Service -> Victim
				Free DNS Services:
					freedns.afraid.org:
					xname.org:
AD Persistence:
	Read Post Exploitation Section of AD Exploitation Sheet
Linux Persistence:
	Creating a malicious startup service:
		it depends on linux distro
	Scheduled Tasks:
		/etc/crontab
		/etc/cron.d